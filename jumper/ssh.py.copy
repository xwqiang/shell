#!/usr/bin/python
#coding=UTF-8
import os,sys
import pexpect
import struct
import fcntl
import termios
import signal
reload(sys)
sys.setdefaultencoding('utf8')
def sigwinch_passthrough (sig, data):
    winsize = getwinsize()
    ssh.setwinsize(winsize[0],winsize[1])
def getwinsize():
    if 'TIOCGWINSZ' in dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    else:
        TIOCGWINSZ = 1074295912L # Assume
    s = struct.pack('HHHH', 0, 0, 0, 0)
    x = fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ, s)
    return struct.unpack('HHHH', x)[0:2]

ip_dic = {}
cmd_dic = {}
ip_file = '/Users/xuwuqiang/Documents/shell/jumper/ip.md'
def initDict():
	with open(ip_file) as f_line:
		for line in f_line:
			print line,
			l = line.strip().split('|')
			id = l[0]
			host = l[1]
			port = l[2]
			user = l[3]
			mark = l[4]
			cmd = l[5]
			if len(l) == 0:break
			ip_dic[id] = 'ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ' +user + '@%s -p %s'  %(host,port)
			cmd_dic[id]=cmd
if __name__=="__main__":
	while(True):
		try:
		    initDict()
		    option = raw_input("请选择:\n")
		    if option in ip_dic.keys():
			#print ip_dic[option]
			ssh = pexpect.spawn(ip_dic[option])
			ssh.expect("$")
			ssh.sendline(cmd_dic[option])
			signal.signal(signal.SIGWINCH, sigwinch_passthrough)
			size = getwinsize()
			ssh.setwinsize(size[0], size[1])
			ssh.interact()
			break
		    else:
		    	if option == 'q':
				break
			print "您输入的服务器标识不存在！"
		except (Exception,SyntaxError,KeyboardInterrupt):
		    print "您输入的内容存在问题，请重新输入!"
